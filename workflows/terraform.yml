name: "Terraform"

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      TF_WORKSPACE:
        required: true
        type: string
    secrets:
      GOOGLE_CREDENTIALS:
        required: true

env:
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

jobs:

  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: |
          github.event_name == 'pull_request' ||
          github.event_name == 'schedule' ||
          (
            github.event_name == 'workflow_dispatch' &&
            github.ref != 'refs/heads/main'
          )
        run: terraform plan -no-color
        continue-on-error: true

      - name: Post Plan
        if: github.event_name == 'pull_request'
        uses: robburger/terraform-pr-commenter@v1.5.0
        env:
          TF_WORKSPACE: ${{ inputs.TF_WORKSPACE}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: |
          github.ref == 'refs/heads/main' &&
          (
            github.event_name == 'push' ||
            github.event_name == 'workflow_dispatch'
          )
        run: terraform apply -auto-approve
