name: 'Terraform'
inputs:
  working-directory:
    required: true
    type: string
  TF_WORKSPACE:
    required: true
    type: string
  live-branch:
    required: false
    type: string
    default: "main"
  github-token:
    required: false

runs:
  using: "composite"
  steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        id: fmt
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: terraform init

      - name: Terraform Validate
        id: validate
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: |
          github.event_name == 'pull_request' ||
          github.event_name == 'schedule' ||
          (
            github.event_name == 'workflow_dispatch' &&
            github.ref != format('refs/heads/{0}', inputs.live-branch)
          )
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: terraform plan -no-color
        continue-on-error: true

      - name: Post Plan
        if: github.event_name == 'pull_request'
        uses: robburger/terraform-pr-commenter@v1.5.0
        env:
          TF_WORKSPACE: ${{ inputs.TF_WORKSPACE}}
          GITHUB_TOKEN: ${{ inputs.github-token }}
        with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: exit 1

      - name: Terraform Apply
        if: |
          github.ref == format('refs/heads/{0}', inputs.live-branch) &&
          (
            github.event_name == 'push' ||
            github.event_name == 'workflow_dispatch'
          )
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: terraform apply -auto-approve
